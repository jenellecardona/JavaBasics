What is Abstraction:
Abstraction is the process of hiding the implementation details and only showing the functionality.
It is the third pillar of OOPs

~By creating an abstract method we make the inheriting class define those methods.

Why should we use Abstraction:
1. It reduces the complexity by separating the ideas from implementations.
2. We can also enforce rules on other classes.

How can we use the abstraction:
We can use abstraction in our code with the help of abstract classes and interfaces.
We create abstract methods with only the header and mark the class as abstract. Now every class that will
be inheriting from this class will either implement those methods or mark the child class abstract as well.

Rules:
1. Abstract methods can't have a body
2. As soon as we have one abstract method in a class. That class must be declared as abstract.
3. Once a class inherits from an abstract class that class must implement the abstract methods
   or it should be marked as abstract.
4. We can have normal methods with body and abstract methods inside the same abstract class.
5. We can't create the objects of abstract classes.
6. Abstract classes can't be declared final classes.
7. We can have everything inside an abstract class that we can have in a normal class. The only difference is we can't
create objects of that class.
8.


Why an abstract class can not be final:
Abstract means something is not complete while final means something is complete and does not require modification.

